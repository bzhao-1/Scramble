services:
  game:
      build: 
        context: ./
        dockerfile: ./app/backend/Dockerfile
      ports:
        - "8080:8080"
      depends_on:
        languages:
          condition: service_healthy
        database:
          condition: service_healthy
      env_file: .env
  languages:
      build:
        context: ./
        dockerfile: ./app/languages/Dockerfile
      env_file:
        - .env
      ports:
        - "8000:8000"
      # expose:
      #   - "8000"
      healthcheck:
        test: curl --fail ${LANGUAGES_URL} || exit 1
        interval: 10s
        timeout: 3s
        retries: 3
  database:
      image: postgres:latest
      env_file:
        - .env
      ports:
        - "5432:5432"
      volumes:
      - type: bind
        source: "./app/database/cmd/init.sql" 
        target: /docker-entrypoint-initdb.d/init.sql
      healthcheck:
        test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
        interval: 10s
        timeout: 3s
        retries: 3
  frontend:
    build: 
      dockerfile: ./frontend/Dockerfile
    ports:
      - '3000:3000'
